/* High-Performance Animation System with GPU Acceleration */

/* ===== PERFORMANCE-OPTIMIZED KEYFRAMES ===== */

/* Core execution state animations */
@keyframes glow {
  0%, 100% { 
    box-shadow: 0 0 5px rgba(59, 130, 246, 0.3), 0 0 10px rgba(59, 130, 246, 0.2);
    transform: translateZ(0);
  }
  50% { 
    box-shadow: 0 0 20px rgba(59, 130, 246, 0.6), 0 0 30px rgba(59, 130, 246, 0.4);
    transform: translateZ(0);
  }
}

@keyframes shimmer {
  0% { 
    transform: translateX(-100%) translateZ(0);
  }
  100% { 
    transform: translateX(100%) translateZ(0);
  }
}

@keyframes shake {
  0%, 100% { 
    transform: translateX(0) translateZ(0);
  }
  25% { 
    transform: translateX(-4px) translateZ(0);
  }
  75% { 
    transform: translateX(4px) translateZ(0);
  }
}

@keyframes pulse {
  0%, 100% { 
    opacity: 1;
    transform: scale(1) translateZ(0);
  }
  50% { 
    opacity: 0.7;
    transform: scale(1.02) translateZ(0);
  }
}

/* Enhanced smooth transitions */
@keyframes fadeIn {
  from { 
    opacity: 0;
    transform: translateZ(0);
  }
  to { 
    opacity: 1;
    transform: translateZ(0);
  }
}

@keyframes fadeOut {
  from { 
    opacity: 1;
    transform: translateZ(0);
  }
  to { 
    opacity: 0;
    transform: translateZ(0);
  }
}

@keyframes slideInUp {
  from { 
    transform: translate3d(0, 20px, 0);
    opacity: 0;
  }
  to { 
    transform: translate3d(0, 0, 0);
    opacity: 1;
  }
}

@keyframes slideInDown {
  from { 
    transform: translate3d(0, -20px, 0);
    opacity: 0;
  }
  to { 
    transform: translate3d(0, 0, 0);
    opacity: 1;
  }
}

@keyframes slideInLeft {
  from { 
    transform: translate3d(-20px, 0, 0);
    opacity: 0;
  }
  to { 
    transform: translate3d(0, 0, 0);
    opacity: 1;
  }
}

@keyframes slideInRight {
  from { 
    transform: translate3d(20px, 0, 0);
    opacity: 0;
  }
  to { 
    transform: translate3d(0, 0, 0);
    opacity: 1;
  }
}

@keyframes scaleIn {
  from { 
    transform: scale3d(0.95, 0.95, 1);
    opacity: 0;
  }
  to { 
    transform: scale3d(1, 1, 1);
    opacity: 1;
  }
}

@keyframes scaleOut {
  from { 
    transform: scale3d(1, 1, 1);
    opacity: 1;
  }
  to { 
    transform: scale3d(0.95, 0.95, 1);
    opacity: 0;
  }
}

/* Advanced smooth hover effects */
@keyframes buttonHover {
  from {
    transform: translate3d(0, 0, 0);
  }
  to {
    transform: translate3d(0, -1px, 0);
  }
}

@keyframes handlePulse {
  0%, 100% {
    transform: scale3d(1, 1, 1);
    box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.4);
  }
  50% {
    transform: scale3d(1.15, 1.15, 1);
    box-shadow: 0 0 0 8px rgba(59, 130, 246, 0);
  }
}

@keyframes edgeFlow {
  0% {
    stroke-dashoffset: 20;
  }
  100% {
    stroke-dashoffset: 0;
  }
}

@keyframes statusIndicatorPulse {
  0%, 100% {
    transform: scale3d(1, 1, 1);
    opacity: 1;
  }
  50% {
    transform: scale3d(1.3, 1.3, 1);
    opacity: 0.8;
  }
}

/* ===== HIGH-PERFORMANCE ANIMATION CLASSES ===== */

/* Base performance class for all animated elements */
.gpu-accelerated {
  will-change: transform, opacity;
  backface-visibility: hidden;
  perspective: 1000px;
  transform-style: preserve-3d;
}

/* Smooth transition base class */
.smooth-transition {
  transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1),
              opacity 0.2s cubic-bezier(0.4, 0, 0.2, 1),
              box-shadow 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  will-change: transform, opacity, box-shadow;
}

/* Execution state animations with GPU acceleration */
.animate-glow {
  animation: glow 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  will-change: box-shadow, transform;
}

.animate-shimmer {
  animation: shimmer 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  will-change: transform;
}

.animate-shake {
  animation: shake 0.4s cubic-bezier(0.4, 0, 0.6, 1);
  will-change: transform;
}

.animate-pulse-smooth {
  animation: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  will-change: opacity, transform;
}

/* Enhanced interaction animations */
.animate-button-hover {
  transition: transform 0.15s cubic-bezier(0.4, 0, 0.2, 1),
              box-shadow 0.15s cubic-bezier(0.4, 0, 0.2, 1);
  will-change: transform, box-shadow;
}

.animate-button-hover:hover {
  transform: translate3d(0, -1px, 0);
}

.animate-handle-pulse {
  animation: handlePulse 1.5s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  will-change: transform, box-shadow;
}

.animate-status-indicator {
  animation: statusIndicatorPulse 1.5s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  will-change: transform, opacity;
}

/* Modal and panel animations */
.animate-modal-in {
  animation: scaleIn 0.2s cubic-bezier(0.16, 1, 0.3, 1);
  will-change: transform, opacity;
}

.animate-modal-out {
  animation: scaleOut 0.15s cubic-bezier(0.4, 0, 1, 1);
  will-change: transform, opacity;
}

.animate-panel-slide-in {
  animation: slideInRight 0.3s cubic-bezier(0.16, 1, 0.3, 1);
  will-change: transform, opacity;
}

/* Edge animations */
.animate-edge-flow {
  stroke-dasharray: 5, 5;
  animation: edgeFlow 2s linear infinite;
  will-change: stroke-dashoffset;
}

/* ===== ACCESSIBILITY: REDUCED MOTION SUPPORT ===== */

@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
  
  /* Keep essential feedback animations but make them instant */
  .animate-glow,
  .animate-pulse-smooth,
  .animate-shimmer,
  .animate-handle-pulse,
  .animate-status-indicator {
    animation: none !important;
  }
  
  /* Replace with static visual cues */
  .animate-glow {
    box-shadow: 0 0 10px rgba(59, 130, 246, 0.5) !important;
  }
  
  .animate-shake {
    animation: none !important;
    border-color: var(--color-error) !important;
    box-shadow: 0 0 0 2px var(--color-error-light) !important;
  }
}

/* ===== PERFORMANCE OPTIMIZATIONS ===== */

/* Container query optimization for large lists */
@container (min-width: 300px) {
  .gpu-accelerated {
    contain: layout style paint;
  }
}

/* Layer promotion for complex animations */
.animate-complex {
  transform: translateZ(0);
  will-change: transform, opacity;
  isolation: isolate;
}

/* Optimize for 60fps animations */
.animate-60fps {
  animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  will-change: transform;
  transform: translateZ(0);
}

/* ===== UTILITY CLASSES FOR SMOOTH INTERACTIONS ===== */

.hover-lift {
  transition: transform 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  will-change: transform;
}

.hover-lift:hover {
  transform: translate3d(0, -2px, 0);
}

.hover-scale {
  transition: transform 0.15s cubic-bezier(0.4, 0, 0.2, 1);
  will-change: transform;
}

.hover-scale:hover {
  transform: scale3d(1.05, 1.05, 1);
}

.focus-ring {
  transition: box-shadow 0.15s cubic-bezier(0.4, 0, 0.2, 1);
  will-change: box-shadow;
}

.focus-ring:focus-visible {
  box-shadow: 0 0 0 2px var(--color-primary), 0 0 0 4px rgba(255, 255, 255, 0.1);
}

/* ===== LOADING AND STATE ANIMATIONS ===== */

.loading-spinner {
  animation: spin 1s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  will-change: transform;
  transform-origin: center;
}

.loading-dots::after {
  content: '';
  animation: pulse 1.5s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  will-change: opacity;
}

/* ===== STAGGER ANIMATION UTILITIES ===== */

.stagger-1 { animation-delay: 0.1s; }
.stagger-2 { animation-delay: 0.2s; }
.stagger-3 { animation-delay: 0.3s; }
.stagger-4 { animation-delay: 0.4s; }
.stagger-5 { animation-delay: 0.5s; }

/* ===== DEBUG MODE (Development only) ===== */

.debug-animations * {
  animation-duration: 5s !important;
  transition-duration: 1s !important;
}

.debug-will-change {
  outline: 1px dashed lime;
}

.debug-will-change::before {
  content: 'will-change: ' attr(data-will-change);
  position: absolute;
  background: lime;
  color: black;
  font-size: 10px;
  padding: 2px;
  z-index: 9999;
}